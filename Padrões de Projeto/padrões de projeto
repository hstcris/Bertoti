# O que são padrões de projetos?
São soluções típicas para problemas comuns em projetos de software. É como se fosse uma receita, os padrões de projeto são a lista de ingredientes e o algoritmo é o modo de preparo.
Algoritmo e Padrões costumam ser confundidos mas um algoritmo sempre define um conjunto claro de ações para atingir uma meta, um padrão é mais uma descrição de alto nível de uma solução. 

# Padrões de projetos podem ser dividos em:
## Padrões criacionais

Padrões que fornecem vários mecanismos de criação de objetos, que aumentam a flexibilidade e reutilização de código já existente. Por exemplo:

<ul>
    <li>Factory Method</li>
    <li>Abstract Factory</li>
    <li>Builder </li>
    <li>Prototype</li>
    <li>Singleton</li>
</ul>

## Padrões Estruturais

Padões que explicam como montar objetos e classes em estruturas maiores mas ainda mantendo essas estruturas flexíveis eficientes
Por exemplo:

<ul>
    <li>Adapter</li>
    <li>Bridge</li>
    <li>Composite</li> 
    <li>Decorator</li>
    <li>Facade</li>
    <li>Flyweight</li>
    <li>Proxy</li>
</ul>

## Padrões Comportamentais

Padrões voltados aos algoritmos e a designação de responsabilidade entre objetos. Por exemplo:

<ul>
    <li>Chain of Responsability</li>
    <li>Command</li>
    <li>Iterator</li>
    <li>Mediator</li>
    <li>Memento</li>
    <li>Observer</li>
    <li>State</li>
    <li>Strategy</li>
    <li>Template Method</li>
    <li>Visitor</li>
</ul>
